{"version":3,"sources":["App.js","index.js"],"names":["App","errs","useState","pwd","setPwd","checkbox","divClass","input_id","id","value","pwd_letters","upper_pwd","lower_pwd","num_pwd","symbol_pwd","pwd_arr","copied","className","style","document","getElementById","checked","color","animation","onChange","e","console","log","target","type","onClick","includes","navigator","clipboard","writeText","setTimeout","htmlFor","min","max","defaultValue","map","defaultChecked","Object","keys","filter","index","pwd_var","pwd_length","Math","floor","length","random","i","ext","sort","toString","replace","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4b44207e.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport { FaClipboard } from \"react-icons/fa\";\n\nfunction App() {\n  const errs = [\"Copied!\",\n  \"Length Of Password Must Be > 4\",\n  \"Check Atleast One Option\",\n  \"Costomize Your Password\"]\n  const [pwd, setPwd] = useState(errs[3])\n  const checkbox = [\n    {\n      divClass: \"uppercase\",\n      input_id: \"pwd-uppercase\",\n      id: 1,\n      value: \"Include Uppercase\"\n    },\n    {\n      divClass: \"lowercase\",\n      input_id: \"pwd-lowercase\",\n      id: 2,\n      value: \"Include Lowercase\"\n    },\n    {\n      divClass: \"number\",\n      input_id: \"pwd-number\",\n      id: 3,\n      value: \"Include Number\"\n    },\n    {\n      divClass: \"symbol\",\n      input_id: \"pwd-symbol\",\n      id: 4,\n      value: \"Include Symbol\"\n    },\n  ]\n  const pwd_letters = {\n    upper_pwd: \"QWERTYUIOPLKJHGFDSAZXCVBNM\",\n    lower_pwd: \"qwertyuioplkjhgfdsazxcvbnm\",\n    num_pwd: \"1234567890\",\n    symbol_pwd: \"!@#$%=&*?\"\n  }\n  var red = {\n    color: \"red\",\n    animation: \"shake 0.2s linear 5\"\n  }\n\n  const purple = {\n    color: \"rgb(141, 0, 141)\"\n  }\n\n  let pwd_arr = []\n\n  const pwd_generator = () => {\n    pwd_arr = Object.keys(pwd_letters).map(value => pwd_letters[value]).filter((value, index) => {\n      return document.getElementById(checkbox[index].input_id).checked\n    })\n    setPwd(() => {\n      let pwd_var = []\n      let pwd_length = document.getElementById(\"pwd-length\").value\n\n      if (pwd_length > 4) {\n        if (document.getElementById(checkbox[0].input_id).checked) {\n          pwd_var = [...pwd_var, pwd_letters.upper_pwd[Math.floor(pwd_letters.upper_pwd.length * Math.random())]]\n          pwd_length--\n        }\n\n        if (document.getElementById(checkbox[1].input_id).checked) {\n          pwd_var = [...pwd_var, pwd_letters.lower_pwd[Math.floor(pwd_letters.lower_pwd.length * Math.random())]]\n          pwd_length--\n        }\n\n        if (document.getElementById(checkbox[2].input_id).checked) {\n          pwd_var = [...pwd_var, pwd_letters.num_pwd[Math.floor(pwd_letters.num_pwd.length * Math.random())]]\n          pwd_length--\n        }\n\n        if (document.getElementById(checkbox[3].input_id).checked) {\n          pwd_var = [...pwd_var, pwd_letters.symbol_pwd[Math.floor(pwd_letters.symbol_pwd.length * Math.random())]]\n          pwd_length--\n        }\n\n        for (let i = 0; i < pwd_length; i++) {\n          let ext = pwd_arr[Math.floor(pwd_arr.length * Math.random())]\n          pwd_var = pwd_arr.length > 0 && [...pwd_var, ext[Math.floor(ext.length * Math.random())]]\n        }\n        return pwd_arr.length > 0 ? pwd_var.sort(() => Math.floor(Math.random() - 0.5)).toString().replace(/,/g, \"\") : errs[2]\n      }\n      return errs[1]\n    })\n  }\n\n  const changeInput = (e) => {\n    console.log(e.target.value)\n  }\n\n  const minus = () => {\n    document.getElementById(\"pwd-length\").value > 5 &&\n      document.getElementById(\"pwd-length\").value--\n  }\n\n  const plus = () => {\n    document.getElementById(\"pwd-length\").value < 25 &&\n      document.getElementById(\"pwd-length\").value++\n  }\n\n  let copied = pwd\n\n  const copy = () => {\n    !errs.includes(pwd) && navigator.clipboard.writeText(pwd)\n    !errs.includes(pwd) && setPwd(errs[0])\n    !errs.includes(pwd) && setTimeout(() => {\n      setPwd(copied)\n    }, 500)\n  }\n  return (\n    <div className=\"App\">\n      <div className='container'>\n        <div className=\"input\">\n          <h2>Create A Random Password</h2>\n          <input\n            style={document.getElementById(\"pwd-length\") &&\n              (document.getElementById(\"pwd-length\").value > 4 &&\n                (document.getElementById(checkbox[0].input_id).checked ||\n                  document.getElementById(checkbox[1].input_id).checked ||\n                  document.getElementById(checkbox[2].input_id).checked ||\n                  document.getElementById(checkbox[3].input_id).checked) ?\n                purple : red)}\n            onChange={changeInput}\n            value={pwd}\n            className='pwd'\n            type=\"text\" />\n          <button onClick={copy} className='clipboard'><FaClipboard /></button>\n        </div>\n\n        <div className=\"include\">\n          <div className=\"length\">\n            <label htmlFor=\"pwd-length\">Length of Password</label>\n            <div className='addsub'>\n              <input\n                onClick={minus}\n                className='btn\n                sub'\n                value=\"-\"\n                type=\"button\" />\n\n              <input\n                id='pwd-length'\n                min={5}\n                max={25}\n                defaultValue={8}\n                type=\"number\" />\n\n              <input\n                onClick={plus}\n                className='btn\n                add'\n                value=\"+\"\n                type=\"button\" />\n            </div>\n          </div>\n\n          {\n            checkbox.map(value => {\n              return (\n                <div className={value.divClass} key={value.id}>\n                  <label htmlFor={value.input_id}>{value.value}</label>\n                  <input\n                    id={value.input_id}\n                    defaultChecked={true}\n                    className='checkbox'\n                    type=\"checkbox\" />\n                  <label className='span-checkbox' htmlFor={value.input_id}></label>\n                </div>\n              )\n            })\n          }\n        </div>\n\n        <div className=\"generate\">\n          <input\n            onClick={pwd_generator}\n            id='pwd-generate'\n            value=\"Generate Pin\"\n            type=\"button\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}